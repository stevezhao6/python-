正<div class="post-body" itemprop="articleBody">

      
      

      
        <h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"/>问题描述</h2><p>问题的起因来自于一段正则替换。为了从一段HTML代码里面提取出正文，去掉所有的HTML标签和属性，可以写一个Python函数：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/><span class="line">4</span><br/><span class="line">5</span><br/><span class="line">6</span><br/></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br/><span class="line"/><br/><span class="line"/><br/><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">remove_tag</span><span class="params">(html)</span>:</span></span><br/><span class="line">    text = re.sub(<span class="string">'&lt;.*?&gt;'</span>, <span class="string">''</span>, html, re.S)</span><br/><span class="line">    <span class="keyword">return</span> text</span><br/></pre></td></tr></table></figure>
<p>这段代码的使用了正则表达式的替换功能<code>re.sub</code>。这个函数的第一个参数表示需要被替换的内容的正则表达式，由于HTML标签都是使用尖括号包起来的，因此使用<code>&lt;.*?&gt;</code>就可以匹配所有<code>&lt;xxx yyy="zzz"&gt;</code>和<code>&lt;/xxx&gt;</code>。</p>
<p>第二个参数表示被匹配到的内容将要被替换成什么内容。由于我需要提取正文，那么只要把所有HTML标签都替换为空字符串即可。第三个参数就是需要被替换的文本，在这个例子中是HTML源代码段。</p>
<p>至于<code>re.S</code>，在4年前的一篇文章中我讲到了它的用法：<a href="https://www.kingname.info/2014/12/21/Python%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E4%B8%AD%E7%9A%84re-S/">Python正则表达式中的re.S</a>。</p>
<p>现在使用一段HTML代码来测试一下：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/><span class="line">4</span><br/><span class="line">5</span><br/><span class="line">6</span><br/><span class="line">7</span><br/><span class="line">8</span><br/><span class="line">9</span><br/><span class="line">10</span><br/><span class="line">11</span><br/><span class="line">12</span><br/><span class="line">13</span><br/><span class="line">14</span><br/><span class="line">15</span><br/></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br/><span class="line"/><br/><span class="line"/><br/><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">remove_tag</span><span class="params">(html)</span>:</span></span><br/><span class="line">    text = re.sub(<span class="string">'&lt;.*?&gt;'</span>, <span class="string">''</span>, html, re.S)</span><br/><span class="line">    <span class="keyword">return</span> text</span><br/><span class="line"/><br/><span class="line"/><br/><span class="line">source_1 = <span class="string">'''</span></span><br/><span class="line"><span class="string">&lt;div class="content"&gt;今天的主角是&lt;a href="xxx"&gt;kingname&lt;/a&gt;，我们掌声欢迎！&lt;/div&gt;</span></span><br/><span class="line"><span class="string">'''</span></span><br/><span class="line"/><br/><span class="line"/><br/><span class="line">text = remove_tag(source_1)</span><br/><span class="line">print(text)</span><br/></pre></td></tr></table></figure>
<p>运行效果如下图所示，功能完全符合预期</p>
<p><img src="https://kingname-1257411235.cos.ap-chengdu.myqcloud.com/2018-08-27-22-22-54.png" alt=""/></p>
<p>再来测试一下代码中有换行符的情况：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/><span class="line">4</span><br/><span class="line">5</span><br/><span class="line">6</span><br/><span class="line">7</span><br/><span class="line">8</span><br/><span class="line">9</span><br/><span class="line">10</span><br/><span class="line">11</span><br/><span class="line">12</span><br/><span class="line">13</span><br/><span class="line">14</span><br/><span class="line">15</span><br/><span class="line">16</span><br/></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br/><span class="line"/><br/><span class="line"/><br/><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">remove_tag</span><span class="params">(html)</span>:</span></span><br/><span class="line">    text = re.sub(<span class="string">'&lt;.*?&gt;'</span>, <span class="string">''</span>, html, re.S)</span><br/><span class="line">    <span class="keyword">return</span> text</span><br/><span class="line"/><br/><span class="line">source_2 = <span class="string">'''</span></span><br/><span class="line"><span class="string">&lt;div class="content"&gt;</span></span><br/><span class="line"><span class="string">    今天的主角是</span></span><br/><span class="line"><span class="string">    &lt;a href="xxx"&gt;kingname&lt;/a&gt;</span></span><br/><span class="line"><span class="string">    ，我们掌声欢迎！</span></span><br/><span class="line"><span class="string">&lt;/div&gt;</span></span><br/><span class="line"><span class="string">'''</span></span><br/><span class="line">text = remove_tag(source_2)</span><br/><span class="line">print(text)</span><br/></pre></td></tr></table></figure>
<p>运行效果如下图所示，完全符合预期。<br/><img src="https://kingname-1257411235.cos.ap-chengdu.myqcloud.com/2018-08-27-22-25-29.png" alt=""/></p>
<p>经过测试，在绝大多数情况下，能够从的HTML代码段中提取出正文。但也有例外。</p>
<a id="more"/>
<h2 id="例外情况"><a href="#例外情况" class="headerlink" title="例外情况"/>例外情况</h2><p>有一段HTML代码段比较长，内容如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br/></pre></td><td class="code"><pre><span class="line">&lt;img&gt;&lt;/span&gt;&lt;span&gt;遇见kingname&lt;/span&gt;&lt;/a &gt;&lt;a  &gt;&lt;span class='url-icon'&gt;&lt; img '&gt;&lt;/span&gt;&lt;span &gt;温柔&lt;/span&gt;&lt;/a &gt;&lt;a  &gt;&lt;span &gt;#青南#&lt;/span&gt;&lt;/a &gt; &lt;br /&gt;就在这里…&lt;br /&gt;我的小侯爷呢？？？</span><br/></pre></td></tr></table></figure>
<p>运行效果如下图所示，最后两个HTML标签替换失败。<br/><img src="https://kingname-1257411235.cos.ap-chengdu.myqcloud.com/2018-08-27-22-31-59.png" alt=""/></p>
<p>一开始我以为是HTML里面的空格或者引号引起的问题，于是我把HTML代码进行简化：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br/></pre></td><td class="code"><pre><span class="line">&lt;img&gt;&lt;/span&gt;&lt;span&gt;遇见kingname&lt;/span&gt;&lt;/a&gt;&lt;a&gt;&lt;span&gt;&lt;img&gt;&lt;/span&gt;&lt;span&gt;温柔&lt;/span&gt;&lt;/a&gt;&lt;a&gt;&lt;span&gt;#青南#&lt;/span&gt;&lt;/a&gt;&lt;br/&gt;就在这里…&lt;br/&gt;我的小侯爷呢</span><br/></pre></td></tr></table></figure>
<p>问题依然存在，如下图所示。</p>
<p><img src="https://kingname-1257411235.cos.ap-chengdu.myqcloud.com/2018-08-27-22-36-14.png" alt=""/></p>
<p>而且更令人惊讶的是，如果把第一个标签<code>&lt;img&gt;</code>删了，那么替换结果里面就少了一个标签，如下图所示。</p>
<p><img src="https://kingname-1257411235.cos.ap-chengdu.myqcloud.com/2018-08-27-22-45-09.png" alt=""/></p>
<p>实际上，不仅仅是删除第一个标签，前面任意一个标签删了都可以减少结果里面的一个标签。如果删除前面两个或以上标签，那么结果就正常了。</p>
<h2 id="答疑解惑"><a href="#答疑解惑" class="headerlink" title="答疑解惑"/>答疑解惑</h2><p>这个看起来很奇怪的问题，根本原因在re.sub的第4个参数。从函数原型可以看到：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br/></pre></td><td class="code"><pre><span class="line">def sub(pattern, repl, string, count=0, flags=0)</span><br/></pre></td></tr></table></figure>
<p>第四个参数是count表示替换个数，re.S如果要用，应该作为第五个参数。所以如果把<code>remove_tag</code>函数做一些修改，那么结果就正确了:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/></pre></td><td class="code"><pre><span class="line">def remove_tag(html):</span><br/><span class="line">    text = re.sub('&lt;.*?&gt;', '', html, flags=re.S)</span><br/><span class="line">    return text</span><br/></pre></td></tr></table></figure>
<p>那么问题来了，把re.S放在count的位置，为什么代码没有报错？难道<code>re.S</code>是数字？实际上，如果打印一下就会发现，<code>re.S</code>确实可以作为数字：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; import re</span><br/><span class="line">&gt;&gt;&gt; print(int(re.S))</span><br/><span class="line">16</span><br/></pre></td></tr></table></figure>
<p>现在回头数一数出问题的HTML代码，发现最后多出来的两个<code>&lt;br&gt;</code>标签，刚刚好是第17和18个标签，而由于<code>count</code>填写的<code>re.S</code>可以当做16来处理，那么Python就会把前16个标签替换为空字符串，从而留下最后两个。</p>
<p>至此问题的原因搞清楚了。</p>
<p>这个问题没有被及早发现，有以下几个原因：</p>
<ol>
<li>被替换的HTML代码是代码段，大多数情况下HTML标签不足16个，所以问题被隐藏。</li>
<li><code>re.S</code>是一个对象，但也是数字，count接收的参数刚好也是数字。在很多编程语言里面，常量都会使用数字，然后用一个有意义的大写字母来表示。</li>
<li><code>re.S</code> 处理的情况是<code>&lt;div class="123" \n&gt;</code> 而不是<code>&lt;div class="123"&gt;\n&lt;/div&gt;</code>但测试的代码段标签都是第二种情况，所以在代码段里面实际上加不加<code>re.S</code>效果是一样的。</li>
</ol>

      
    </div>

    

    
    
    

    
      
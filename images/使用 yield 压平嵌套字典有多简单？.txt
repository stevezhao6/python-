使<div class="post-body" itemprop="articleBody">

      
      

      
        <p>我们经常遇到各种字典套字典的数据，例如：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/><span class="line">4</span><br/><span class="line">5</span><br/><span class="line">6</span><br/><span class="line">7</span><br/><span class="line">8</span><br/><span class="line">9</span><br/><span class="line">10</span><br/><span class="line">11</span><br/></pre></td><td class="code"><pre><span class="line">nest_dict = {</span><br/><span class="line">    <span class="string">'a'</span>: <span class="number">1</span>,</span><br/><span class="line">    <span class="string">'b'</span>: {</span><br/><span class="line">        <span class="string">'c'</span>: <span class="number">2</span>,</span><br/><span class="line">        <span class="string">'d'</span>: <span class="number">3</span>,</span><br/><span class="line">        <span class="string">'e'</span>: {<span class="string">'f'</span>: <span class="number">4</span>}</span><br/><span class="line">    },</span><br/><span class="line">    <span class="string">'g'</span>: {<span class="string">'h'</span>: <span class="number">5</span>},</span><br/><span class="line">    <span class="string">'i'</span>: <span class="number">6</span>,</span><br/><span class="line">    <span class="string">'j'</span>: {<span class="string">'k'</span>: {<span class="string">'l'</span>: {<span class="string">'m'</span>: <span class="number">8</span>}}}</span><br/><span class="line">}</span><br/></pre></td></tr></table></figure>
<p>有没有什么简单的办法，把它<code>压扁</code>，变成：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/><span class="line">4</span><br/><span class="line">5</span><br/><span class="line">6</span><br/><span class="line">7</span><br/><span class="line">8</span><br/><span class="line">9</span><br/></pre></td><td class="code"><pre><span class="line">{</span><br/><span class="line">    <span class="string">'a'</span>: <span class="number">1</span>,</span><br/><span class="line">    <span class="string">'b_c'</span>: <span class="number">2</span>,</span><br/><span class="line">    <span class="string">'b_d'</span>: <span class="number">3</span>,</span><br/><span class="line">    <span class="string">'b_e_f'</span>: <span class="number">4</span>,</span><br/><span class="line">    <span class="string">'g_h'</span>: <span class="number">5</span>,</span><br/><span class="line">    <span class="string">'i'</span>: <span class="number">6</span>,</span><br/><span class="line">    <span class="string">'j_k_l_m'</span>: <span class="number">8</span></span><br/><span class="line">}</span><br/></pre></td></tr></table></figure>
<a id="more"/>
<p>你肯定想到了使用递归来解决这个问题，那么你可以试一试，看看你的递归函数有多少行代码。</p>
<p>今天，我们使用<code>yield</code>关键字来实现这个需求，在<code>不炫技</code>的情况下，只需要8行代码。在炫技的情况下，只需要3行代码。</p>
<p>要快速地把这个嵌套字典压扁，我们需要从下网上来处理字段。例如对于<code>b-&gt;e-&gt;f-&gt;4</code>这条路径，我们首先把最里面的<code>{'f': 4}</code>转换为一个元组<code>('f', 4)</code>。然后，把这个元组向上抛出，于是得到了元组<code>('e', ('f', 4))</code>。我们把 <code>e</code>拼接到<code>f</code>的前面，变为：<code>('e_f', 4)</code>，继续往上抛出，得到<code>('b', ('e_f', 4))</code>。再把<code>b</code>拼接到<code>e_f</code>上面，得到<code>('b_e_f', 4)</code>。完成一条线路的组装。</p>
<p>这个逻辑如果使用<code>yield</code>关键字来实现，就是：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/><span class="line">4</span><br/><span class="line">5</span><br/><span class="line">6</span><br/><span class="line">7</span><br/><span class="line">8</span><br/></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">flat</span><span class="params">(x)</span>:</span></span><br/><span class="line">    <span class="keyword">for</span> key, value <span class="keyword">in</span> x.items():</span><br/><span class="line">        <span class="keyword">if</span> isinstance(value, dict):</span><br/><span class="line">            <span class="keyword">for</span> k, v <span class="keyword">in</span> flat(value):</span><br/><span class="line">                k = <span class="string">f'<span class="subst">{key}</span>_<span class="subst">{k}</span>'</span></span><br/><span class="line">                <span class="keyword">yield</span> (k, v)</span><br/><span class="line">        <span class="keyword">else</span>:</span><br/><span class="line">            <span class="keyword">yield</span> (key, value)</span><br/></pre></td></tr></table></figure>
<p>运行结果如下图所示：</p>
<p><img src="https://kingname-1257411235.cos.ap-chengdu.myqcloud.com/2019-10-31-22-14-24.png" alt=""/></p>
<p>通过使用 <code>yield</code>关键字，字典的<code>key</code>会像是在流水线上一样，一层一层从内向外进行组装，从而形成完整的路径。</p>
<p>在下一篇文章中，我们继续使用<code>yield</code>关键字来解决字典与列表混合嵌套的情况。</p>

      
    </div>

    

    
    
    

    
      
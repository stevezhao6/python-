你<div class="post-body" itemprop="articleBody">

      
      

      
        <p>你的代码是如何被炫技毁掉的？</p>
<a id="more"/>
<p>假设有这样一个例子：</p>
<p>一个函数接收两个参数，第一个参数为一个字典，第二个参数为一个列表，我们要把列表中的每一个元素去查字典，如果能够查询到，那么就获取值，如果不能查询到，就跳过。</p>
<p>例如：</p>
<p>输入：<code>{'a': 1, 'b': 2, 'c': 3}</code>和<code>['a', 'd', 'c']</code>，那么打印：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/></pre></td><td class="code"><pre><span class="line">a=<span class="number">1</span></span><br/><span class="line">c=<span class="number">3</span></span><br/></pre></td></tr></table></figure>
<p>我们可能会这样写代码：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/><span class="line">4</span><br/></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">referer_dict</span><span class="params">(target, keys)</span>:</span></span><br/><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> keys:</span><br/><span class="line">        <span class="keyword">if</span> k <span class="keyword">in</span> target:</span><br/><span class="line">            print(<span class="string">f'<span class="subst">{k}</span>=<span class="subst">{target[k]}</span>'</span>)</span><br/></pre></td></tr></table></figure>
<p>那么有没有可能把判断<code>k</code>是否在 <code>target</code>这个操作去掉呢？也可以：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/><span class="line">4</span><br/></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">referer_dict</span><span class="params">(target, keys)</span>:</span></span><br/><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> keys:</span><br/><span class="line">        values = target.get(k, <span class="literal">None</span>)</span><br/><span class="line">        values <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">or</span> print(<span class="string">f'<span class="subst">{k}</span>=<span class="subst">{target[k]}</span>'</span>)</span><br/></pre></td></tr></table></figure>
<p>但这种写法实际上并没有节省代码行数，不如这样改：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">referer_dict</span><span class="params">(target, keys)</span>:</span></span><br/><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> keys:</span><br/><span class="line">        k <span class="keyword">not</span> <span class="keyword">in</span> target <span class="keyword">or</span> print(<span class="string">f'<span class="subst">{k}</span>=<span class="subst">{target[k]}</span>'</span>)</span><br/></pre></td></tr></table></figure>
<p>接下来还可以继续优化成一行代码：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">referer_dict</span><span class="params">(target, keys)</span>:</span></span><br/><span class="line">    [print(<span class="string">f'<span class="subst">{k}</span>=<span class="subst">{target[k]}</span>'</span>) <span class="keyword">for</span> k <span class="keyword">in</span> keys <span class="keyword">if</span> k <span class="keyword">in</span> target]</span><br/></pre></td></tr></table></figure>
<p>停。</p>
<p>再这样魔改下去这个函数都可以去掉。总共只需要1行代码。但是这样炫技并不可取。代码可读性和可维护性比炫技重要一万倍。</p>
<p>第四种写法，纯粹就是为了凑出这个打印结果而强行使用了列表推导式，毫无可读性，别人接手这个代码也难以维护。</p>
<p>保持 Python 的自文档性，优秀的 Python 代码，本身就是最好的文档，连注释都不需要就能让人理解。</p>

      
    </div>

    

    
    
    

    
      
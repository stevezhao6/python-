E<div class="post-body" itemprop="articleBody">

      
      

      
        <p>当我们使用 Elasticsearch-py 批量插入数据到 ES 的时候，我们常常使用它的 <code>helpers</code>模块里面的<code>bulk</code>函数。其使用方法如下：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/><span class="line">4</span><br/><span class="line">5</span><br/><span class="line">6</span><br/><span class="line">7</span><br/><span class="line">8</span><br/><span class="line">9</span><br/><span class="line">10</span><br/><span class="line">11</span><br/><span class="line">12</span><br/><span class="line">13</span><br/><span class="line">14</span><br/><span class="line">15</span><br/><span class="line">16</span><br/><span class="line">17</span><br/><span class="line">18</span><br/></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> elasticsearch <span class="keyword">import</span> helpers, Elasticsearch</span><br/><span class="line"/><br/><span class="line">es = Elasticsearch(xxx)</span><br/><span class="line"/><br/><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">generator</span><span class="params">()</span>:</span></span><br/><span class="line">    datas = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br/><span class="line">    <span class="keyword">for</span> data <span class="keyword">in</span> datas:</span><br/><span class="line">        <span class="keyword">yield</span> {</span><br/><span class="line">            <span class="string">'_id'</span>: <span class="string">"xxx"</span>,</span><br/><span class="line">            <span class="string">'_source'</span>: {</span><br/><span class="line">                <span class="string">'age'</span>: data</span><br/><span class="line">            }</span><br/><span class="line">        }</span><br/><span class="line"/><br/><span class="line">helpers.bulk(es,</span><br/><span class="line">index=<span class="string">'xxx'</span>,</span><br/><span class="line">generator(),</span><br/><span class="line">doc_type=<span class="string">'doc'</span>,)</span><br/></pre></td></tr></table></figure>
<p>但这种方式有一个问题，它默认相当于<code>upsert</code>操作。如果<code>_id</code> 对应的文档已经在 ES 里面了，那么数据会被更新。如果<code>_id</code> 对应的文档不在 ES 中，那么就插入。</p>
<a id="more"/>
<p>如果我想实现，不存在就插入，存在就跳过怎么办？此时就需要在文档里面添加<code>_op_type</code>指定操作类型为<code>create</code>:</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/><span class="line">4</span><br/><span class="line">5</span><br/><span class="line">6</span><br/><span class="line">7</span><br/><span class="line">8</span><br/><span class="line">9</span><br/><span class="line">10</span><br/><span class="line">11</span><br/><span class="line">12</span><br/><span class="line">13</span><br/><span class="line">14</span><br/><span class="line">15</span><br/><span class="line">16</span><br/><span class="line">17</span><br/><span class="line">18</span><br/><span class="line">19</span><br/></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> elasticsearch <span class="keyword">import</span> helpers, Elasticsearch</span><br/><span class="line"/><br/><span class="line">es = Elasticsearch(xxx)</span><br/><span class="line"/><br/><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">generator</span><span class="params">()</span>:</span></span><br/><span class="line">    datas = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br/><span class="line">    <span class="keyword">for</span> data <span class="keyword">in</span> datas:</span><br/><span class="line">        <span class="keyword">yield</span> {</span><br/><span class="line">            <span class="string">'_op_type'</span>: <span class="string">'create'</span>,</span><br/><span class="line">            <span class="string">'_id'</span>: <span class="string">"xxx"</span>,</span><br/><span class="line">            <span class="string">'_source'</span>: {</span><br/><span class="line">                <span class="string">'age'</span>: data</span><br/><span class="line">            }</span><br/><span class="line">        }</span><br/><span class="line"/><br/><span class="line">helpers.bulk(es,</span><br/><span class="line">generator(),</span><br/><span class="line">index=<span class="string">'xxx'</span>,</span><br/><span class="line">doc_type=<span class="string">'doc'</span>)</span><br/></pre></td></tr></table></figure>
<p>此时，如果<code>_id</code> 对应的文档不在 ES 中，那么就会正常插入，如果<code>ES</code>里面已经有<code>_id</code>对应的数据了，那么就会报错。由于<code>bulk</code>一次性默认插入500条数据，假设其中有2条数据已经存在了，那么剩下的498条会被正常插入。然后程序报错退出，告诉你有两条写入失败，因为已经存在。</p>
<p>如果你不想让程序报错终止，那么可以增加2个参数：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br/><span class="line">2</span><br/><span class="line">3</span><br/><span class="line">4</span><br/><span class="line">5</span><br/></pre></td><td class="code"><pre><span class="line">helpers.bulk(es,</span><br/><span class="line">    generator(),</span><br/><span class="line">    index=<span class="string">'xxx'</span>,</span><br/><span class="line">    doc_type=<span class="string">'doc'</span>,</span><br/><span class="line">    raise_on_exception=<span class="literal">False</span>,               raise_on_error=<span class="literal">False</span>)</span><br/></pre></td></tr></table></figure>
<p>其中<code>raise_on_exception=False</code>表示在插入数据失败时，不需要抛出异常。<code>raise_on_error=False</code>表示不抛出<code>BulkIndexError</code>。</p>

      
    </div>

    

    
    
    

    
      